<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: power of inquiry | Bob Jiang Blog]]></title>
  <link href="http://bobjiang.github.com/blog/categories/power-of-inquiry/atom.xml" rel="self"/>
  <link href="http://bobjiang.github.com/"/>
  <updated>2013-02-11T10:03:52+08:00</updated>
  <id>http://bobjiang.github.com/</id>
  <author>
    <name><![CDATA[Bob Jiang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[询问的力量： 敏捷教练小提示 - 第一部分]]></title>
    <link href="http://bobjiang.github.com/blog/2013/02/11/scrummaster-and-coaching-part1/"/>
    <updated>2013-02-11T07:32:00+08:00</updated>
    <id>http://bobjiang.github.com/blog/2013/02/11/scrummaster-and-coaching-part1</id>
    <content type="html"><![CDATA[<p><img src="/images/sm_and_coaching.jpg"></p>

<p>"询问的力量：敏捷教练小提示"是我在印度金奈2012敏捷之旅的keynote演讲主题。我写这篇博客分享我的演讲重点。</p>

<p>我们先看看“询问”这个词。询问意思是探索、探查、调查、检查、分析、审查或者询问。它是关于搜索某事的信息或者做正式的研究。询问时教练辅导有力方式之一。敏捷教练与ScrumMasters可以通过理解询问的力量获得对团队正向的影响。</p>

<p>有效的询问包括有力的问题。我们可以学习到问问题的重要性或者询问的力量，爱因斯坦曾经说过-“如果我有一个小时解决问题，我的人生就依赖于解决方案，我会先花55分钟确定恰当的问题，因为一旦我知道了正确的问题，我会在五分钟内解决问题。”</p>

<!-- more -->


<p>在Dorothy Leeds的书《The 7 Powers of Questions》中说到，“问题  1）需要答案，2）激发思考，3）让我们可控，4）使人们开创，5）给出有价值的信息，6）引导有质量的聆听，7）使人们说服自己。”</p>

<p>这个情境下，我分享话题的日程。日程包含一整套问题！</p>

<ol>
<li>为什么问有力的问题？</li>
<li>什么是有力的问题？</li>
<li>怎么样问有力的问题</li>
<li>如何保持带走的知识，保持联系，并分享辅导经验?</li>
</ol>


<p>为什么问有力的问题？有力的问题</p>

<ol>
<li>发起反思与富有成效的会话</li>
<li>使假设浮现</li>
<li>产生热情与活力</li>
<li>集中注意力与询问</li>
<li>包含更多的问题。</li>
</ol>


<p>无力的问题正好相反！不会引发沉思与富有成效的会话，隐藏假设，活力衰竭，使人们消极。</p>

<p>我们可以区分有力的问题与无力的问题。下面的问题你怎么看？哪些是有力的？哪些是无力的？</p>

<ol>
<li>我们这个迭代做的好吗？</li>
<li>你在做哪个用户故事？</li>
<li>你做单元测试了吗？</li>
<li>给测试人员提供高质量的交付物意味着什么？</li>
<li>还有什么风险我们没有想到？</li>
<li>我们现在看到的可能性是多少？</li>
</ol>


<p>前两个问题明显是无力的。假设你是ScrumMaster或者敏捷教练。你想知道项目中正在做什么。参加每日站会！尽管这样，你问前两个问题吗？或者你试图继续有力问题的对话使你得到想要的答案。</p>

<p>第三个问题是封闭问题（是、否）。我们都知道最后三个问题是高质量的问题，有力的问题。这些问题使你思考、参与并找到答案。</p>

<p>我们如何构造有力的问题呢？在第二部分我们给出几个例子。</p>

<hr />

<p><a href="http://bobjiang.com/blog/2013/02/10/scrummaster-and-coach-opening/">Scrummasters与敏捷教练系列（开篇）</a><br/>
询问的力量： 敏捷教练小提示 - 第一部分<br/>
询问的力量： 敏捷教练小提示 - 第二部分<br/>
询问的力量： 敏捷教练小提示 - 第三部分<br/>
询问的力量： 敏捷教练小提示 - 第四部分</p>

<hr />

<p><a href="http://se-thoughtograph.blogspot.in/2012/10/the-power-of-inquiry-coaching-tips-for.html">原文链接</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scrummasters与敏捷教练系列（开篇）]]></title>
    <link href="http://bobjiang.github.com/blog/2013/02/10/scrummaster-and-coach-opening/"/>
    <updated>2013-02-10T07:31:00+08:00</updated>
    <id>http://bobjiang.github.com/blog/2013/02/10/scrummaster-and-coach-opening</id>
    <content type="html"><![CDATA[<p><img src="/images/sm_and_coaching.jpg"></p>

<p>很多天之前， 我复习了一遍Ken Schwaber和Jeff Sutherlan共同开发和维护的“Scrum指南”。 我集中于ScrumMaster角色涉及“教练”方面的内容，下面是我的一些发现：</p>

<p>Scrum Master服务开发团队的几种方式，包括：</p>

<ul>
<li>指导开发团队自组织和跨职能</li>
<li>指导开发团队没有完全采纳与理解Scrum的组织环境</li>
</ul>


<p>Scrum Master服务组织的几种方式，包括</p>

<ul>
<li>带领和指导组织采纳Scrum</li>
</ul>


<p>为了弄清这几点，我开始回忆过去十年的事件。那个时候对于敏捷方法我们都是新手。在印度Scrum还不是很流行。我们正在学习迭代开发并尝试理解与跟随敏捷原则。XP那时很流行。</p>

<!-- more -->


<p>我们团队不是完全自组织的。Jim，组织中一个高级项目经理负责建立项目团队，与团队一起工作并确保交付日期。之前他有一些RUP的经验。Jim是个优秀的人、经验丰富的经理、求知学者与导师。</p>

<p>对我而言，Jim的角色有点像ScrumMaster。</p>

<p>在项目早期Jim注意到Sailesh，团队中的一员总是迟到（1小时或2小时甚至有时候3小时），完成任务后就回家。Jim思想很开放。他主张弹性工作时间。Jim没有冲动做出任何判断只要Sailesh可以交付并完成他的承诺。Sailesh是个非常优秀的程序员，他写的代码质量非常高也负责一些复杂的特性。</p>

<p>一个月左右，Jim发现有个团队成员需要Sailesh的帮助解决技术问题。但Sailesh不在。和往常一样，他那天迟到了然后开始他自己的工作。很明显，每天Sailesh有足够的时间完成自己的工作。他的日常计划包含协作或者帮助别人或者互相帮助了吗？Sailesh有点自负因为他的技能和经验。他不需要其他团队成员的帮助。也许你猜到了，他没有任何协作的态度。</p>

<p>这里有问题。观察到类似Sailesh的这个事情后，Jim有点担忧并在第二天上午九点召集一个会议。Jim想要我和他们一起开会。因为在接下来几个月Jim准备让我接班。</p>

<p>第二天早上Sailesh又迟到了。他9:40走进会议室，随口说，“Hi Jim,我刚刚到，我们可以开始了吗？”。已经迟到了40分钟。</p>

<p>Jim忍无可忍，回答，“Sailesh，现在9:40！你怎么来晚了？”。</p>

<p>“我凌晨一点睡觉，也起晚了！”</p>

<p>“我们昨天计划好的会议。你接受了并准时下班。因此今天早上我很惊奇你为什么不在9点之前赶到。”</p>

<p>“是的。但是通常我来的有点晚。今天没想到车胎漏气了！对不起。”</p>

<p>我一直在听着他们的对话。我很震惊。毫无疑问，Sailesh没有组织概念。他只关心他自己的任务。他没有重视同事的时间。</p>

<p>会议又开了10分钟，最后Jim严厉地说，“Sailesh，你必须按照公司规定时间每天准时上班。如果你偶尔迟到30分钟或者一小时是可以的，但你一直这样，我们都知道你可以准时。我们是一个团队，不是一盘散沙。”</p>

<p>Sailesh离开了会议室。Jim找我聊了一会儿。我们谈到两个选择。第一个是找Sailesh谈谈，辅导帮助他理解他的强项与可改进的地方。第二个是，当然如果第一个不奏效，让他离开项目再进一步商议。</p>

<p>最后，过了几个月Sailesh辞职了。看起来他想要继续作为软件架构的个人专家。我不确信他个人是否可以成功因为他缺少合作精神。</p>

<p>回想一下，Jim和我是否可以有不同的处理方式。我们没有错吗？早期我们没有注意到或者把Sailesh团结在一起吗？如果再碰到类似的问题，我们会怎么做？</p>

<p>你的项目碰到过类似问题吗？你的解决方法是什么？</p>

<p>想要了解更多，请阅读 “询问的力量：敏捷教练小提示”系列
备注：为了保密，故事里的采用的是化名。
询问的力量：敏捷教练小提示--第一部分 (todo: 下一篇的链接)</p>

<hr />

<p><a href="http://bobjiang.com/blog/2013/02/10/scrummaster-and-coach-opening/">Scrummasters与敏捷教练系列（开篇）</a><br/>
询问的力量： 敏捷教练小提示 - 第一部分<br/>
询问的力量： 敏捷教练小提示 - 第二部分<br/>
询问的力量： 敏捷教练小提示 - 第三部分<br/>
询问的力量： 敏捷教练小提示 - 第四部分</p>

<hr />

<p>原文链接 <a href="http://se-thoughtograph.blogspot.in/2012/10/scrum-masters-and-coaching.html">http://se-thoughtograph.blogspot.in/2012/10/scrum-masters-and-coaching.html</a></p>
]]></content>
  </entry>
  
</feed>
